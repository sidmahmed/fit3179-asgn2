{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "#FFFFFF",
  "padding": 5,
  "width": 600,
  "height" :425,
  "data": [
    {"name": "brush_store"},
    {
      "name": "source_0",
      "url": "https://raw.githubusercontent.com/ahmedbonyeamin/fit3179-asgn2/master/data/unemployment.csv",
      "format": {"type": "csv", "parse": {"Date": "date"}}
    }
  ],
  "signals": [
    {"name": "concat_0_height", "value": 200},
    {"name": "concat_1_height", "value": 60},
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {
      "name": "brush",
      "update": "vlSelectionResolve(\"brush_store\", \"union\")"
    }
  ],
  "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "each"},
  "marks": [
    {
      "type": "group",
      "name": "concat_0_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "width"},
          "height": {"signal": "concat_0_height"}
        }
      },
      "marks": [
        {
          "name": "concat_0_pathgroup",
          "type": "group",
          "from": {
            "facet": {
              "name": "faceted_path_concat_0_main",
              "data": "source_0",
              "groupby": ["Type"]
            }
          },
          "encode": {
            "update": {
              "width": {"field": {"group": "width"}},
              "height": {"field": {"group": "height"}}
            }
          },
          "marks": [
            {
              "name": "concat_0_marks",
              "type": "line",
              "clip": true,
              "style": ["line"],
              "sort": {"field": "datum[\"Date\"]"},
              "interactive": false,
              "from": {"data": "faceted_path_concat_0_main"},
              "encode": {
                "update": {
                  "stroke": {"scale": "color", "field": "Type"},
                  "description": {
                    "signal": "\"Date: \" + (timeFormat(datum[\"Date\"], '%b %d, %Y')) + \"; Rate: \" + (format(datum[\"Rate\"], \"\")) + \"; Type: \" + (isValid(datum[\"Type\"]) ? datum[\"Type\"] : \"\"+datum[\"Type\"])"
                  },
                  "x": {"scale": "concat_0_x", "field": "Date"},
                  "y": {"scale": "concat_0_y", "field": "Rate"},
                  "strokeWidth": {"value": 2},
                  "defined": {
                    "signal": "isValid(datum[\"Date\"]) && isFinite(+datum[\"Date\"]) && isValid(datum[\"Rate\"]) && isFinite(+datum[\"Rate\"])"
                  }
                }
              }
            }
          ]
        }
      ],
      "axes": [
        {
          "scale": "concat_0_y",
          "orient": "left",
          "gridScale": "concat_0_x",
          "grid": true,
          "tickCount": {"signal": "ceil(concat_0_height/40)"},
          "domain": false,
          "labels": false,
          "aria": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_0_x",
          "orient": "bottom",
          "grid": false,
          "labelBaseline": "top",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(width/40)"},
          "zindex": 0
        },
        {
          "scale": "concat_0_y",
          "orient": "left",
          "grid": false,
          "title": "Rate",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(concat_0_height/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "concat_1_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "width"},
          "height": {"signal": "concat_1_height"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, width)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"concat_1_x\", brush_Date[0]), scale(\"concat_1_x\", brush_Date[1])]"
            },
            {
              "events": [{"source": "view", "type": "dblclick"}],
              "update": "[0, 0]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, width)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, width)"
            }
          ]
        },
        {
          "name": "brush_Date",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"concat_1_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [{"scale": "concat_1_x"}],
              "update": "(!isArray(brush_Date) || (+invert(\"concat_1_x\", brush_x)[0] === +brush_Date[0] && +invert(\"concat_1_x\", brush_x)[1] === +brush_Date[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [{"signal": "brush_Date"}],
              "update": "brush_Date ? {unit: \"concat_1\", fields: brush_tuple_fields, values: [brush_Date]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [{"field": "Date", "channel": "x", "type": "R"}]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_1\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_1\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_1\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_1\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "concat_1_pathgroup",
          "type": "group",
          "from": {
            "facet": {
              "name": "faceted_path_concat_1_main",
              "data": "source_0",
              "groupby": ["Type"]
            }
          },
          "encode": {
            "update": {
              "width": {"field": {"group": "width"}},
              "height": {"field": {"group": "height"}}
            }
          },
          "marks": [
            {
              "name": "concat_1_marks",
              "type": "line",
              "style": ["line"],
              "sort": {"field": "datum[\"Date\"]"},
              "interactive": true,
              "from": {"data": "faceted_path_concat_1_main"},
              "encode": {
                "update": {
                  "stroke": {"scale": "color", "field": "Type"},
                  "description": {
                    "signal": "\"Date: \" + (timeFormat(datum[\"Date\"], '%b %d, %Y')) + \"; Rate: \" + (format(datum[\"Rate\"], \"\")) + \"; Type: \" + (isValid(datum[\"Type\"]) ? datum[\"Type\"] : \"\"+datum[\"Type\"])"
                  },
                  "x": {"scale": "concat_1_x", "field": "Date"},
                  "y": {"scale": "concat_1_y", "field": "Rate"},
                  "strokeWidth": {"value": 2},
                  "defined": {
                    "signal": "isValid(datum[\"Date\"]) && isFinite(+datum[\"Date\"]) && isValid(datum[\"Rate\"]) && isFinite(+datum[\"Rate\"])"
                  }
                }
              }
            }
          ]
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_1\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_1\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_1\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_1\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ],
              "stroke": [
                {"test": "brush_x[0] !== brush_x[1]", "value": "white"},
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_1_x",
          "orient": "bottom",
          "grid": false,
          "title": "Date",
          "labelBaseline": "top",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(width/40)"},
          "zindex": 0
        },
        {
          "scale": "concat_1_y",
          "orient": "left",
          "grid": false,
          "title": "Rate",
          "tickCount": 3,
          "labelOverlap": true,
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "color",
      "type": "ordinal",
      "domain": {"data": "source_0", "field": "Type", "sort": true},
      "range": "category"
    },
    {
      "name": "concat_0_x",
      "type": "time",
      "domain": {"data": "source_0", "field": "Date"},
      "domainRaw": {"signal": "brush[\"Date\"]"},
      "range": [0, {"signal": "width"}]
    },
    {
      "name": "concat_0_y",
      "type": "linear",
      "domain": {"data": "source_0", "field": "Rate"},
      "range": [{"signal": "concat_0_height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "concat_1_x",
      "type": "time",
      "domain": {"data": "source_0", "field": "Date"},
      "range": [0, {"signal": "width"}]
    },
    {
      "name": "concat_1_y",
      "type": "linear",
      "domain": {"data": "source_0", "field": "Rate"},
      "range": [{"signal": "concat_1_height"}, 0],
      "nice": true,
      "zero": true
    }
  ],
  "legends": [
    {
      "stroke": "color",
      "symbolType": "stroke",
      "title": "Type",
      "encode": {"symbols": {"update": {"strokeWidth": {"value": 2}}}}
    }
  ],
  "config": {
    "range": {
      "category": [
        "#1696d2",
        "#ec008b",
        "#fdbf11",
        "#000000",
        "#d2d2d2",
        "#55b748"
      ],
      "diverging": [
        "#ca5800",
        "#fdbf11",
        "#fdd870",
        "#fff2cf",
        "#cfe8f3",
        "#73bfe2",
        "#1696d2",
        "#0a4c6a"
      ],
      "heatmap": [
        "#ca5800",
        "#fdbf11",
        "#fdd870",
        "#fff2cf",
        "#cfe8f3",
        "#73bfe2",
        "#1696d2",
        "#0a4c6a"
      ],
      "ordinal": [
        "#cfe8f3",
        "#a2d4ec",
        "#73bfe2",
        "#46abdb",
        "#1696d2",
        "#12719e"
      ],
      "ramp": [
        "#CFE8F3",
        "#A2D4EC",
        "#73BFE2",
        "#46ABDB",
        "#1696D2",
        "#12719E",
        "#0A4C6A",
        "#062635"
      ]
    },
    "path": {"stroke": "#1696d2", "strokeWidth": 0.5},
    "shape": {"stroke": "#1696d2"},
    "symbol": {"fill": "#1696d2", "size": 30},
    "axisX": {
      "domain": true,
      "domainColor": "#000000",
      "domainWidth": 1,
      "grid": false,
      "labelFontSize": 12,
      "labelFont": "Lato",
      "labelAngle": 0,
      "tickColor": "#000000",
      "tickSize": 5,
      "titleFontSize": 12,
      "titlePadding": 10,
      "titleFont": "Lato"
    },
    "axisY": {
      "domain": false,
      "domainWidth": 1,
      "grid": true,
      "gridColor": "#DEDDDD",
      "gridWidth": 1,
      "labelFontSize": 12,
      "labelFont": "Lato",
      "labelPadding": 8,
      "ticks": false,
      "titleFontSize": 12,
      "titlePadding": 10,
      "titleFont": "Lato",
      "titleAngle": 0,
      "titleY": -10,
      "titleX": 18
    },
    "legend": {
      "labelFontSize": 12,
      "labelFont": "Lato",
      "symbolSize": 100,
      "titleFontSize": 12,
      "titlePadding": 10,
      "titleFont": "Lato",
      "orient": "right",
      "offset": 10
    },
    "style": {
      "bar": {"fill": "#1696d2", "stroke": null},
      "cell": {"stroke": "transparent"},
      "arc": {"fill": "#1696d2"},
      "area": {"fill": "#1696d2"},
      "line": {"stroke": "#1696d2", "strokeWidth": 2},
      "rect": {"fill": "#1696d2"},
      "text": {
        "font": "Lato",
        "fontSize": 11,
        "align": "center",
        "fontWeight": 400,
        "size": 11
      },
      "trail": {"stroke": "#1696d2", "strokeWidth": 0, "size": 1},
      "group-title": {"fontSize": 18, "font": "Lato"}
    }
  }
}